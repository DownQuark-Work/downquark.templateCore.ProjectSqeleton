# This will eventually work alongside the the CLI TUI and assist with creating new projects or updating/migrating those which are outdated.
# - utilizes toml syntax
# - JSON output: https://pseitz.github.io/toml-to-json-online-converter/
# - validate with: https://www.toml-lint.com/

[qrx] # https://toml.io/en/v1.0.0#array-of-tables
project = "ARTIST_PLATFORM"
root = '/'
semver = '0.0.1-alpha'
version = '_v1'

[qrx.Integrations.Documentation]
key = 'DOCS'
runcmd = 'caddy file-server --listen :4242' # `runcmd` exists _only_ on select build locations
path = '_sqleton/_documentation'

[qrx.Integrations.Design]
key = 'DESIGN.SYSTEM'
path = '_sqeleton/_documentation/_v1/design-system'

[qrx.Integrations.Outliers]
key = 'OUTLIERS'
path = '_sqeleton/outliers'
_tbd = true

[qrx.Integrations.Overseers]
key = 'OVERSEERS'
path = '_sqeleton/overseers'
_tbd = true

[qrx.Integrations.Qore]
key = 'QORE'
path = '_sqeleton/qore'
  # Below (and above for that matter) are TODO/TBD
[qrx.Integrations.Qore.Target._Qomponent]
path = '_sqeleton/qore/_qomponents'
runcmd = 'yarn dev'

[qrx.Integrations.Qore.Target._Qomponent.patterntype]
component = ['NONE','atomic'] # allows for scalability/one-offs/etc
styles = ['NONE','atomic', 'cube', '7-1']

[qrx.Integrations.Qore.Target.Native]
_tbd = true

[[qrx.Integrations.Qore.Target.Persistent.storage]]
type = 'browser'
name = 'indexeddb'
[[qrx.Integrations.Qore.Target.Persistent.storage]]
type = 'graph'
name = 'arango'
install = 'https://www.arangodb.com/docs/stable/installation-mac-osx.html#homebrew'
runcmd = '/Applications/ArangoDB3-CLI.app/Contents/Resources/arangosh'
access = '//127.0.0.1:8529/'
[[qrx.Integrations.Qore.Target.Persistent.storage]]
type = 'relational'
name = 'maria'
install = 'brew install mariadb'
runcmd = '/opt/homebrew/opt/mariadb/bin/mysqld_safe --datadir=/opt/homebrew/var/mysql --port 3366'
access = '//127.0.0.1:3366/'
[[qrx.Integrations.Qore.Target.Persistent.storage]]
type = 'time'
name = 'quest'
install = 'brew install questdb'
runcmd = '/opt/homebrew/opt/questdb/bin/questdb start -d /opt/homebrew/var/questdb -n -f'
access = '//127.0.0.1:9000/'

[qrx.Integrations.Qore.Target.Protocol]
_tbd = true

[qrx.Integrations.Qore.Target.Web.Browser]
path = '_sqeleton/qore/web/browser/_core'
runcmd = 'deno run --allow-run --allow-write --allow-read _run.ts'
access = 'http://0.0.0.0:1447'
[[qrx.Integrations.Qore.Target.Web.Browser.Layer]]
name = 'application'
[[qrx.Integrations.Qore.Target.Web.Browser.Layer]]
name = 'business'
[[qrx.Integrations.Qore.Target.Web.Browser.Layer]]
name = 'network'
[[qrx.Integrations.Qore.Target.Web.Browser.Layer]]
name = 'persistence'
[[qrx.Integrations.Qore.Target.Web.Browser.Layer]]
name = 'protocol'

[qrx.Integrations.Qore.Target.Web.Extensions.PWA]
path = '_sqeleton/qore/web/extensions/pwa'
runcmd = 'yarn dev'

[qrx.Integrations.Qore.Target.Web.Plugins]
path = '_sqeleton/qore/web/plugins'
_tbd = true

# define all symlinks
[[qrx.SymLink]]
from = '_sqeleton/qore/_qomponents/_dist'
to = '_sqeleton/_documentation/_v1/design-system/components/litqomponent'
[[qrx.SymLink]]
from = 'TODO'
to = 'TODO'